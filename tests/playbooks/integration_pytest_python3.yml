# SPDX-License-Identifier: BSD-3-Clause
---
- name: Install dependencies for integration tests
  hosts: all
  vars:
    - rpmdependencies:
        - git
        - python3-pip
        - rsync

  tasks:
    - name: Install EPEL for RHEL and CentOS
      # yamllint disable-line rule:line-length
      command: "yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm"
      when: ansible_distribution in ["CentOS", "RedHat"]

    - name: Install rpm dependencies
      package:
        state: present
        name: "{{ rpmdependencies }}"

    - name: Install Pytest
      command: "pip3 install pytest"


# Import needed in order to install initscripts dependencies on the remote
# system.
- import_playbook: "../tests_default_initscripts.yml"

# Import needed in order to install Network Manager dependencies on the remote
# system.
- import_playbook: "../tests_default_nm.yml"


- name: Run Pytest tests
  hosts: all
  vars:
    - rundir: /run/system-roles-test
  tasks:
    - file:
        state: directory
        path: "{{ rundir }}"
        recurse: true

    - name: Get collection paths
      set_fact:
        _collection_paths: |
          {{
             (lookup("env","ANSIBLE_COLLECTIONS_PATH").split(":") +
             lookup("env","ANSIBLE_COLLECTIONS_PATHS").split(":") +
             lookup("env","COLLECTIONS_PATHS").split(":")) |
             select | list
          }}

    - name: Legacy role format
      block:
        - command: git rev-parse --show-toplevel
          register: git_top_directory
          delegate_to: localhost

        - debug:
            var: git_top_directory

        - synchronize:
            src: "{{ git_top_directory.stdout }}/"
            dest: "{{ rundir }}/"
            recursive: yes
            delete: yes
            rsync_opts:
              - "--exclude=.pyc"
              - "--exclude=__pycache__"
          when: false

        # TODO: using tar and copying the file is a workaround for
        # the synchronize module that does not work in test-harness.
        # Related issue:
        # https://github.com/linux-system-roles/test-harness/issues/102
        #

        - name: Create Tar file
          shell: 'tar -cvf {{ playbook_dir }}/testrepo.tar
                 --exclude "*.pyc" --exclude "__pycache__"
                 --exclude testrepo.tar --exclude ".git"
                 --exclude ".tox"
                 -C {{ git_top_directory.stdout }} .'
          delegate_to: localhost

      when: "{{ _collection_paths | d([]) | length == 0 }}"

    - name: Collection role format
      block:

        - name: Get the distribution of the control host
          shell: grep "^ID=" /etc/os-release
          register: _my_id
          delegate_to: localhost

        - name: Stat network_lsr with the collections module_utils path
          vars:
            - _network_lsr_path: "\
              {{ item }}/ansible_collections/\
              {{ _my_id.stdout.split('=')[1] }}/\
              system_roles/plugins/module_utils/network_lsr"
          local_action:
            stat path="{{ _network_lsr_path }}"
          register: _network_lsr
          loop: "{{ _collection_paths | d([]) }}"

        - name: Check if network_lsr exist or not
          set_fact:
            _is_collection: "{{ _network_lsr.results |
                                selectattr('stat', 'defined') |
                                selectattr('stat.exists', '==', True) | list }}"
          failed_when: _is_collection | d([]) | length == 0

        - name: Create Tar file
          shell: 'tar -cvf {{ playbook_dir }}/testrepo.tar
                 --exclude "*.pyc" --exclude "__pycache__"
                 --exclude testrepo.tar -C {{ playbook_dir }}/..
                 --transform "s,^\.,tests," .'
          delegate_to: localhost

      when: _collection_paths | d([])

    - name: Copy testrepo.tar to the remote system
      copy:
        src: "{{ playbook_dir }}/testrepo.tar"
        dest: "{{ rundir }}"

    - name: Remove testrepo.tar
      local_action: file path="{{ playbook_dir }}/testrepo.tar" state=absent

    - name: Untar testrepo.tar
      command: tar xf testrepo.tar
      args:
        chdir: "{{ rundir }}"

    - block:
        - name: Run pytest with nm
          command: "pytest {{ rundir }}/tests/integration/ --provider=nm"
          register: playbook_run
      always:
        - debug:
            var: playbook_run.stdout_lines

    - block:
        - name: Run pytest with initscripts
          command: >
            pytest '{{ rundir }}/tests/integration/' --provider=initscripts
          register: playbook_run
      always:
        - debug:
            var: playbook_run.stdout_lines
