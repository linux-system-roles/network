# SPDX-License-Identifier: BSD-3-Clause
---
- name: Play for testing ethtool features settings
  hosts: all
  vars:
    interface: testnic1
    type: veth
  tasks:
    - name: Show playbook name
      debug:
        msg: "this is: playbooks/tests_ethtool_features.yml"
      tags:
        - always

    - name: "INIT: Ethtool feeatures tests"
      debug:
        msg: "##################################################"
    - name: Include the task 'show_interfaces.yml'
      include_tasks: tasks/show_interfaces.yml
    - name: Include the task 'manage_test_interface.yml'
      include_tasks: tasks/manage_test_interface.yml
      vars:
        state: present
    - name: Include the task 'assert_device_present.yml'
      include_tasks: tasks/assert_device_present.yml
    - name: Install ethtool (test dependency)
      package:
        name: ethtool
        state: present
        use: "{{ (__network_is_ostree | d(false)) |
          ternary('ansible.posix.rhel_rpm_ostree', omit) }}"

    - name: Test ethtool features settings
      block:
        - name: >-
            TEST: I can create a profile without changing the ethtool features.
          debug:
            msg: "##################################################"
        - name: Get current device features
          command: "ethtool --show-features {{ interface }}"
          register: original_ethtool_features
          changed_when: false
        - name: Import network role
          import_role:
            name: linux-system-roles.network
          vars:
            network_connections:
              - name: "{{ interface }}"
                state: up
                type: ethernet
                ip:
                  dhcp4: "no"
                  auto6: "no"
        - name: Get current device features
          command: "ethtool --show-features {{ interface }}"
          register: ethtool_features
          changed_when: false
        - name: "ASSERT: The profile does not change the ethtool features"
          assert:
            that:
              - original_ethtool_features.stdout == ethtool_features.stdout

        - name: >-
            TEST: I can disable gro and tx-tcp-segmentation and enable gso.
          debug:
            msg: "##################################################"
        - name: Import network role
          import_role:
            name: linux-system-roles.network
          vars:
            network_connections:
              - name: "{{ interface }}"
                state: up
                type: ethernet
                ip:
                  dhcp4: "no"
                  auto6: "no"
                ethtool:
                  features:
                    gro: "no"
                    gso: "yes"
                    tx-tcp-segmentation: "no"
        - name: Get current device features
          command: "ethtool --show-features {{ interface }}"
          register: ethtool_features
          changed_when: false
        - name: Show ethtool_features
          debug:
            var: ethtool_features.stdout_lines
        - name: Assert device features
          assert:
            that:
              - >-
                  'generic-receive-offload: off' in
                  ethtool_features.stdout_lines
              - >-
                  'generic-segmentation-offload: on' in
                  ethtool_features.stdout_lines
              - >-
                  'tx-tcp-segmentation: off' in
                  ethtool_features.stdout_lines | map('trim')

        - name: >-
            TEST: I can enable tx_tcp_segmentation (using underscores).
          debug:
            msg: "##################################################"
        - name: Import network role
          import_role:
            name: linux-system-roles.network
          vars:
            network_connections:
              - name: "{{ interface }}"
                state: up
                type: ethernet
                ip:
                  dhcp4: "no"
                  auto6: "no"
                ethtool:
                  features:
                    tx_tcp_segmentation: "yes"
        - name: Get current device features
          command: "ethtool --show-features {{ interface }}"
          register: ethtool_features
          changed_when: false
        - name: Show ethtool_features
          debug:
            var: ethtool_features.stdout_lines
        - name: Assert device features
          assert:
            that:
              - >-
                  'tx-tcp-segmentation: on' in
                  ethtool_features.stdout_lines | map('trim')

        - name: I cannot change tx_tcp_segmentation and tx-tcp-segmentation at
                the same time.
          block:
            - name: >-
                TEST: Change feature with both underscores and dashes.
              debug:
                msg: "##################################################"
            - name: Configure ethtool features setting
              network_connections:
                provider: "{{ network_provider | mandatory }}"
                connections:
                  - name: "{{ interface }}"
                    state: up
                    type: ethernet
                    ip:
                      dhcp4: "no"
                      auto6: "no"
                    ethtool:
                      features:
                        tx_tcp_segmentation: "no"
                        tx-tcp-segmentation: "no"
                __header: "# Ansible managed test header"
              register: __network_connections_result
          rescue:
            - name: Show network_connections result
              debug:
                var: __network_connections_result
            - name: Assert the duplicate key "tx_tcp_segmentation"
                configuration error happened
              assert:
                that: __test_str in __network_connections_result.msg
              vars:
                __test_str: >-
                  fatal error: configuration error:
                  connections[0].ethtool.features: duplicate key
                  'tx_tcp_segmentation'

          always:
            - name: Check failure
              debug:
                var: __network_connections_result
            - name: Assert that the result is failure
              assert:
                that: __network_connections_result.failed

        - name: "TEST: I can reset features to their original value."
          debug:
            msg: "##################################################"
        - name: Import network role
          import_role:
            name: linux-system-roles.network
          vars:
            network_connections:
              - name: "{{ interface }}"
                state: up
                type: ethernet
                ip:
                  dhcp4: "no"
                  auto6: "no"
        - name: Get current device features
          command: "ethtool --show-features {{ interface }}"
          register: ethtool_features
          changed_when: false
        # Resetting the ethtools only works with NetworkManager
        - name: "ASSERT: The profile does not change the ethtool features"
          assert:
            that:
              - original_ethtool_features.stdout == ethtool_features.stdout
          when:
            network_provider == 'nm'
      always:
        - name: Clean up the test device and the connection profile
          tags:
            - "tests::cleanup"
          block:
            - name: Import network role
              import_role:
                name: linux-system-roles.network
              vars:
                network_connections:
                  - name: "{{ interface }}"
                    persistent_state: absent
                    state: down
              failed_when: false
            - name: Include the task 'manage_test_interface.yml'
              include_tasks: tasks/manage_test_interface.yml
              vars:
                state: absent
            - name: Verify network state restored to default
              include_tasks: tasks/check_network_dns.yml
