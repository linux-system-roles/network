# SPDX-License-Identifier: BSD-3-Clause
---
- name: Play for creating the connection to match the port device
    based on the perm_hwaddr
  hosts: all
  vars:
    controller_profile: bond0
    controller_device: nm-bond
    port1_profile: bond0.0
    dhcp_interface1: test1
    port2_profile: bond0.1
    dhcp_interface2: test2
    profile: test2conn
    interface: test2
  tasks:
    - name: Test creating the connection to match the port device
        based on the perm_hwaddr
      tags:
        - tests::bond:create
      block:
        - name: Include the task 'run_test.yml'
          include_tasks: tasks/run_test.yml
          vars:
            lsr_description: Given two DHCP-enabled network interfaces,
              when creating a bond profile with them,
              then we can still create the connection to match the port device
              based on the perm_hwaddr
            lsr_setup:
              - tasks/create_test_interfaces_with_dhcp.yml
              - tasks/assert_dhcp_device_present.yml
            lsr_test:
              - network_connections:
                  # Create a bond controller
                  - name: "{{ controller_profile }}"
                    state: up
                    type: bond
                    interface_name: "{{ controller_device }}"
                    bond:
                      mode: 802.3ad
                      ad_actor_sys_prio: 65535
                      ad_actor_system: 00:00:5e:00:53:5d
                      ad_select: stable
                      ad_user_port_key: 1023
                      all_ports_active: true
                      downdelay: 0
                      lacp_rate: slow
                      lp_interval: 128
                      miimon: 110
                      min_links: 0
                      num_grat_arp: 64
                      primary_reselect: better
                      resend_igmp: 225
                      updelay: 0
                      use_carrier: true
                      xmit_hash_policy: encap2+3
                    ip:
                      route_metric4: 65535
                  # add an ethernet to the bond
                  - name: "{{ port1_profile }}"
                    state: up
                    type: ethernet
                    interface_name: "{{ dhcp_interface1 }}"
                    controller: "{{ controller_profile }}"
                  # add a second ethernet to the bond
                  - name: "{{ port2_profile }}"
                    state: up
                    type: ethernet
                    interface_name: "{{ dhcp_interface2 }}"
                    controller: "{{ controller_profile }}"
              - tasks/create_bond_port_match_by_mac.yml
            lsr_assert:
              - tasks/assert_controller_device_present.yml
              - tasks/assert_profile_present.yml
            lsr_cleanup:
              - tasks/cleanup_bond_profile+device.yml
              - tasks/remove_test_interfaces_with_dhcp.yml
              - tasks/check_network_dns.yml
