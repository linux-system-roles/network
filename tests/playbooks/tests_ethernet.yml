# SPDX-License-Identifier: BSD-3-Clause
---
- name: Test configuring ethernet devices
  hosts: all
  vars:
    type: veth
    interface: lsr27
  tasks:
    - name: Show inside ethernet tests
      debug:
        msg: Inside ethernet tests

    - name: Test creating the bridge connection
      tags:
        - tests::states:create
      block:
        - name: Include the task 'run_test.yml'
          include_tasks: tasks/run_test.yml
          vars:
            lsr_description: I can create a profile
            lsr_setup:
              - what: tasks/delete_interface.yml
                condition: "{{ not __bootc_validation | default(false) }}"
              - what: tasks/assert_device_absent.yml
                condition: "{{ not __bootc_validation | default(false) }}"
              - what: tasks/manage_test_interface.yml
                state: present
              - tasks/assert_device_present.yml
            lsr_test:
              - network_connections:
                  - name: "{{ interface }}"
                    interface_name: "{{ interface }}"
                    state: up
                    type: ethernet
                    autoconnect: true
                    ip:
                      address: 192.0.2.1/24
            lsr_assert:
              - tasks/assert_output_in_stderr_without_warnings.yml
              - tasks/assert_device_present.yml
              # Device should be present because of autoconnect: true by
              # default for NM (this might be considered a bug)
              - what: tasks/assert_connection_settings.yml
                condition: "{{ network_provider == 'nm' }}"
                lsr_connection_name: "{{ interface }}"
                lsr_connection_settings:
                  - section: connection
                    option: interface-name
                    value: "{{ interface }}"
                  - section: connection
                    option: type
                    value: ethernet
                    nmvalue: 802-3-ethernet
                  - section: ipv4
                    option: address1
                    value: 192.0.2.1/24
                    nmvalue: false
                  - section: ipv4
                    option: addresses
                    nmvalue: 192.0.2.1/24
                  - section: ipv4
                    option: method
                    value: manual
              - what: tasks/assert_connection_settings.yml
                condition: "{{ network_provider == 'initscripts' or ansible_distribution_major_version | int < 9 }}"
                lsr_connection_name: "{{ interface }}"
                lsr_connection_settings:
                  - TYPE=Ethernet
                  - DEVICE={{ interface }}
                  - IPADDR=192.0.2.1
                  - PREFIX=24
              - what: tasks/assert_nm_connection_status.yml
                condition: "{{ network_provider == 'nm' and __network_is_booted }}"
                lsr_connection_name: "{{ interface }}"
                lsr_connection_output: 'ipv4.addresses:\s+192.0.2.1/24'
            lsr_cleanup:
              - what: tasks/down_profile+delete_interface.yml
                condition: "{{ __network_is_booted }}"
                profile: "{{ interface }}"
                lsr_persistent_state: absent
              - what: tasks/remove_profile.yml
                profile: "{{ interface }}"
              - what: tasks/assert_profile_absent.yml
                condition: "{{ __network_is_booted }}"
                profile: "{{ interface }}"
              - what: tasks/assert_device_absent.yml
                profile: "{{ interface }}"
              - tasks/check_network_dns.yml
