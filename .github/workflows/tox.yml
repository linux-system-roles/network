# yamllint disable rule:line-length
name: tox
on:  # yamllint disable-line rule:truthy
  - pull_request
  - push
env:
  TOX_LSR: "git+https://github.com/linux-system-roles/tox-lsr@2.4.0"
  LSR_ANSIBLE_TEST_DOCKER: "true"
  LSR_ANSIBLES: 'ansible==2.8.* ansible==2.9.*'
  LSR_MSCENARIOS: default
  # LSR_EXTRA_PACKAGES: "libdbus-1-dev libgirepository1.0-dev python3-dev"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pyver: ['2.7', '3.6', '3.7', '3.8']
    steps:
      - name: checkout PR
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyver }}
      - name: Install platform dependencies, python, tox, tox-lsr
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          sudo apt-get update
          sudo apt-get install git
          pip install "$TOX_LSR"
          lsr_ci_preinstall
      - name: Run tox tests
        run: |
          set -euxo pipefail
          toxpyver=$(echo "${{ matrix.pyver }}" | tr -d .)
          toxenvs="py${toxpyver}"
          case "$toxpyver" in
          27) toxenvs="${toxenvs},coveralls,flake8,pylint" ;;
          36) toxenvs="${toxenvs},coveralls,black,yamllint,ansible-lint,collection,ansible-test" ;;
          37) toxenvs="${toxenvs},coveralls" ;;
          38) toxenvs="${toxenvs},coveralls" ;;
          esac
          TOXENV="$toxenvs" lsr_ci_runtox
  python-26:
    runs-on: ubuntu-latest
    steps:
      - name: checkout PR
        uses: actions/checkout@v2
      - name: Run py26 tests
        uses: linux-system-roles/lsr-gh-action-py26@1.0.1
